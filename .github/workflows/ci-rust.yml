name: CI Rust

on:
  push:
    branches:
      - "master"
      - "release/[1-9]**"
    tags:
      - "v[1-9]**"
  pull_request:
    branches:
      - "master"
      - "release/[1-9]**"

env:
  CARGO_TERM_COLOR: always

jobs:
  #build:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout.
  #      uses: actions/checkout@v4
  #    - name: Build.
  #      run: cargo build --verbose
  #    - name: Test.
  #      run: cargo test --verbose
  #    - name: Execute.
  #      run: cargo run -- --version
  #    - name: Proper formatting!
  #      run: cargo fmt --verbose --all -- --check
  #    - name: No Dirtiness!
  #      run: git diff --exit-code
  release-stupid-glibc-2-28:
    #if: ${{ startsWith(github.ref, 'refs/heads/release/') }}
    #needs:
    #  - build
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux_2_28_x86_64
    steps:
      - name: Checkout.
        uses: actions/checkout@v4
      - name: Do The Thing.
        id: build
        shell: bash
        run: |
          uname -a
          which gcc && (echo '#include <errno.h>' | gcc -xc - -E -dM | grep -E '^#define __GLIBC(_MINOR)?__ ') || echo "not glibc..."
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          cargo build --release --verbose
          cargo test --release --verbose
          cargo run --release --quiet -- --version
          echo "version=`cargo run --release --quiet -- --version | cut -d ' ' -f 2`" >> "$GITHUB_OUTPUT"
      - name: Upload Release Binary.
        uses: actions/upload-artifact@v4
        with:
          name: lgrep-${{ steps.build.outputs.version }}-${{ runner.os }}-${{ runner.arch }}-glibc2.24
          path: ${{ matrix.binary }}
  release-matrix:
    if: ${{ startsWith(github.ref, 'refs/heads/release/') }}
    #needs:
    #  - build
    strategy:
      matrix:
        platform:
          - macos-13 # x86_64
          - macos-14 # arm64
          - ubuntu-latest
          - windows-latest
        include:
          - binary: target/release/lgrep
          - label_suffix: ""
          - platform: windows-latest
            binary: target\release\lgrep.exe
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout.
        uses: actions/checkout@v4
      - name: Build.
        run: cargo build --release --verbose
      - name: Test.
        run: cargo test --release --verbose
      - name: Execute.
        id: build
        shell: bash
        run: |
          echo "platform     = ${{ matrix.platform }}"
          which gcc && (echo '#include <errno.h>' | gcc -xc - -E -dM | grep -E '^#define __GLIBC(_MINOR)?__ ') || echo "not glibc..."
          echo "binary       = ${{ matrix.binary }}"
          echo "label_suffix = ${{ matrix.label_suffix }}"
          cargo run --release --quiet -- --version
          echo "version=`cargo run --release --quiet -- --version | cut -d ' ' -f 2`" >> "$GITHUB_OUTPUT"
      - name: Upload Release Binary.
        uses: actions/upload-artifact@v4
        with:
          name: lgrep-${{ steps.build.outputs.version }}-${{ runner.os }}-${{ runner.arch }}${{ matrix.label_suffix }}
          path: ${{ matrix.binary }}
